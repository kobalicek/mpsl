language: cpp

git:
  depth: false

env:
  global:
    - BUILD_TOOLCHAIN="Unix Makefiles"

dist: xenial

matrix:
  include:
    - name: "Linux GCC 4.8 [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-4.8, g++-4.8-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-4.8 && CXX=g++-4.8" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 4.8 [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-4.8]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-4.8 && CXX=g++-4.8"

    - name: "Linux GCC 4.9 [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-4.9, g++-4.9-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-4.9 && CXX=g++-4.9" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 4.9 [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-4.9]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-4.9 && CXX=g++-4.9"

    - name: "Linux GCC 5.X [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-5, g++-5-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-5 && CXX=g++-5" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 5.X [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-5]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-5 && CXX=g++-5"

    - name: "Linux GCC 6.X [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-6, g++-6-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-6 && CXX=g++-6" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 6.X [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-6]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-6 && CXX=g++-6"

    - name: "Linux GCC 7.X [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-7, g++-7-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-7 && CXX=g++-7" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 7.X [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-7]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-7 && CXX=g++-7"

    - name: "Linux GCC 8.X [32-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-8, g++-8-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-8 && CXX=g++-8" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 8.X [32-bit] [REL]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-8, g++-8-multilib, "linux-libc-dev:i386"]
      env: BUILD_MATRIX="BUILD_TYPE=Release && CC=gcc-8 && CXX=g++-8" CXXFLAGS=-m32 LDFLAGS=-m32

    - name: "Linux GCC 8.X [64-bit] [DBG]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-8]
      env: BUILD_MATRIX="BUILD_TYPE=Debug && CC=gcc-8 && CXX=g++-8"

    - name: "Linux GCC 8.X [64-bit] [REL]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-8]
      env: BUILD_MATRIX="BUILD_TYPE=Release && CC=gcc-8 && CXX=g++-8"

    - name: "Linux GCC Default [64-bit] [DBG + Valgrind]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [valgrind]
      env: BUILD_MATRIX="BUILD_TYPE=Debug" USE_VALGRIND=1

    - name: "Linux GCC Default [64-bit] [REL + Valgrind]"
      os: linux
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [valgrind]
      env: BUILD_MATRIX="BUILD_TYPE=Release" USE_VALGRIND=1

    - name: "OSX Clang XCode 9.4 [32-bit] [DBG]"
      os: osx
      osx_image: xcode9.4
      env: BUILD_MATRIX="BUILD_TYPE=Debug" CXXFLAGS=-m32 && LDFLAGS=-m32

    - name: "OSX Clang XCode 9.4 [32-bit] [REL]"
      os: osx
      osx_image: xcode9.4
      env: BUILD_MATRIX="BUILD_TYPE=Release" CXXFLAGS=-m32 && LDFLAGS=-m32

    - name: "OSX Clang XCode 9.4 [64-bit] [DBG]"
      os: osx
      osx_image: xcode9.4
      env: BUILD_MATRIX="BUILD_TYPE=Debug"

    - name: "OSX Clang XCode 9.4 [64-bit] [REL]"
      os: osx
      osx_image: xcode9.4
      env: BUILD_MATRIX="BUILD_TYPE=Release"

    - name: "Windows VS2017 [32-bit] [DBG]"
      os: windows
      env: BUILD_MATRIX="BUILD_TYPE=Debug" BUILD_TOOLCHAIN="Visual Studio 15 2017"

    - name: "Windows VS2017 [32-bit] [REL]"
      os: windows
      env: BUILD_MATRIX="BUILD_TYPE=Release" BUILD_TOOLCHAIN="Visual Studio 15 2017"

    - name: "Windows VS2017 [64-bit] [DBG]"
      os: windows
      env: BUILD_MATRIX="BUILD_TYPE=Debug" BUILD_TOOLCHAIN="Visual Studio 15 2017 Win64"

    - name: "Windows VS2017 [64-bit] [REL]"
      os: windows
      env: BUILD_MATRIX="BUILD_TYPE=Release" BUILD_TOOLCHAIN="Visual Studio 15 2017 Win64"

before_install:
  - eval "$BUILD_MATRIX"

install:
  - |
    mkdir -p deps/asmjit
    git clone --depth=1 https://github.com/asmjit/asmjit.git deps/asmjit

before_script:
  - mkdir build
  - cd build
  - |
    if [[ "$BUILD_TOOLCHAIN" =~ ^Visual\ Studio ]]; then
      cmake .. -G"${BUILD_TOOLCHAIN}" -DASMJIT_DIR="../deps/asmjit" -DMPSL_TEST=1
    else
      cmake .. -G"${BUILD_TOOLCHAIN}" -DASMJIT_DIR="../deps/asmjit" -DMPSL_TEST=1 -DCMAKE_PREFIX_PATH="$MINGW_PATH" -DCMAKE_BUILD_TYPE="${BUILD_TYPE}"
    fi
  - cd ..

script:
  - cd build
  - |
    if [[ "$BUILD_TOOLCHAIN" =~ ^Visual\ Studio ]]; then
      cmake --build . --config ${BUILD_TYPE} -- -nologo -v:quiet
      cd ${BUILD_TYPE}
    else
      cmake --build .
    fi

  - |
    if [ "$USE_VALGRIND" = "1" ]; then
      RUN_CMD="valgrind --leak-check=full --show-reachable=yes"
    fi

  - eval "$RUN_CMD ./mp_test --verbose"
